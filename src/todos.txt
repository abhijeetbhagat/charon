-check pop operations
-track block beginnings - Done
-unit test blocks - Done

-work on expressions - WIP
-learn type erasure
-learn traits from http://huonw.github.io

For your use case, you could do something like `fn visit<T: Visitable>(visitable: T)(self)`
and then have a trait Visitable that's impl'ed for each visitable type.+

-Add a method in block to add statements
-Remove data for LuaType members
